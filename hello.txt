Hello world-1

#include <stdio.h>
int main() {
    printf("Hello, World!\n");
    return 0;
}

Addition of two nmbers-2

#include <stdio.h>
int main() 
{
int num1, num2, sum;
printf("Enter first number: ");
scanf("%d", &num1);
printf("Enter second number: ");
scanf("%d", &num2);
sum = num1 + num2;
printf("Sum: %d\n", sum);
    return 0;
}

Even or odd-3
#include <stdio.h>
int main() 
{
int num;
printf("Enter a number: ");
scanf("%d", &num);
if (num % 2 == 0) 
{
printf("%d is even.\n", num);
    } 
else
{
printf("%d is odd.\n", num);
    }
return 0;
}

Sum of numbers-4
#include <stdio.h>
int main() 
{
int sum = 0;
for (int i = 0; i <= 100; i++) 
{
 sum =sum+i;
    }
printf("Sum of numbers from 1 to 100: %d\n", sum);
return 0;
}

pattern -6
#include <stdio.h>
int main() 
{ int rows = 5;
 for (int i = 1; i <= rows; i++) 
{
for (int j = 1; j <= i; j++)
{
printf("* ");
 }
printf("\n");
}
return 0;
}

Dsplay of even numbers-7
#include <stdio.h>
int main() 
{
for (int i = 0; i <= 100; i ++ )
{
printf("%d ", i);
    }
    printf("\n");
    return 0;
}

prime-8
#include <stdio.h>
int main() 
{
int num, Prime = 1;
printf("Enter a number: ");
scanf("%d", &num);
for (int i = 2; i <= num / 2; i++)
{
if (num % i == 0)
{
Prime = 0;
break;
 }
}
    if (Prime) 
{
 printf("%d prime.\n", num);
    }
else 
{
        printf("%d  not prime.\n", num);
    }
    return 0;
}

Average of n numbers-9
#include <stdio.h>
int main() 
{
    int n, sum = 0, num;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    printf("Enter %d numbers:\n", n);
    for (int i = 0; i < n; i++)
{
 scanf("%d", &num);
sum =sum+ num;
    }
    float average = sum / n;
    printf("Average: %.2f\n", average);
    return 0;
}

Largest element in an array-10
#include <stdio.h>
int main() {
int n;
printf("Enter the size of the array: ");
scanf("%d", &n);
int arr[n];
printf("Enter %d elements:\n", n);
for (int i = 0; i < n; i++)
{
scanf("%d", &arr[i]);
    }
int largest = arr[0];
for (int i = 1; i < n; i++) {
 if (arr[i] > largest) {
largest = arr[i];
        }
    }
    printf("Largest element: %d\n", largest);
    return 0;
}

Sum of natural numbers-11
#include <stdio.h>
int main() 
{
    int n, sum = 0;
    printf("Enter a n: ");
    scanf("%d", &n);
    for (int i = 1; i <= n; i++) {
        sum=sum+ i;
    }
    printf("Sum of natural numbers up to %d: %d\n", n, sum);
    return 0;
}

While loop -12
#include <stdio.h>
int main() 
{
    int i = 1;
    while (i <= 5)
{
printf("%d ", i);
 i++;
    }
    printf("\n");
    return 0;
}

Sum of digits-13
#include <stdio.h>
int main() 
{
    int num, sum = 0, digit;
    printf("Enter a number: ");
    scanf("%d", &num);
    while (num != 0) {
        digit = num % 10;
        sum += digit;
        num /= 10;
    }
    printf("Sum of digits: %d\n", sum);
    return 0;
}

Largest element of an array-14
#include <stdio.h>

int main() {
    int n;
    printf("Enter the size of the array: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    int largest = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] > largest) {
            largest = arr[i];
        }
    }
    printf("Largest element: %d\n", largest);
    return 0;
}

Smallest element of an array-15
#include <stdio.h>

int main() {
    int n;
    printf("Enter the size of the array: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    int smallest = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] < smallest) {
            smallest = arr[i];
        }
    }
    printf("Smallest element: %d\n", smallest);
    return 0;
}

Structure example-16
#include <stdio.h>
struct Person
{
    char name[50];
    int age;
};
int main() 
{
  struct Person person1;
    printf("Enter name: ");
    scanf("%s", person1.name);
    printf("Enter age: ");
    scanf("%d", &person1.age);
    printf("Details of the person:\n");
    printf("Name: %s\n", person1.name);
    printf("Age: %d\n", person1.age);
    return 0;
}

Area of circle-17
#include <stdio.h>
#define PI 3.14159
int main()
{
  double radius, area;
printf("Enter the radius of the circle: ");
    scanf("%lf", &radius);
    area = PI * radius * radius;
    printf("Area of the circle: %lf\n", area);
    return 0;
}

Check leap year-18
#include <stdio.h>

int main() {
    int year;
    printf("Enter a year: ");
    scanf("%d", &year);
    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
        printf("%d is a leap year.\n", year);
    } else {
        printf("%d is not a leap year.\n", year);
    }
    return 0;
}

Factorial-19
#include <stdio.h>

int factorial(int n) {
    if (n == 0 || n == 1) {
        return 1;
    } else {
        return n * factorial(n - 1);
    }
}
int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    printf("Factorial of %d: %d\n", num, factorial(num));
    return 0;
}

Maximum element in array-20
#include <stdio.h>
int main()
{
    int n;
    printf("Enter the size of the array: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d elements:\n", n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    int max = arr[0];
    for (int i = 1; i < n; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    printf("Maximum element: %d\n", max);
    return 0;
}

Calculate simple interest-21
#include <stdio.h>

int main() {
    float principal, rate, time, simpleInterest;
    printf("Enter the principal amount: ");
    scanf("%f", &principal);
    printf("Enter the rate of interest: ");
    scanf("%f", &rate);
    printf("Enter the time in years: ");
    scanf("%f", &time);
    simpleInterest = (principal * rate * time) / 100;
    printf("Simple Interest: %f\n", simpleInterest);
    return 0;
}

Vowel or consonant-22
#include <stdio.h>
int isVowel(char ch) {
    ch = tolower(ch);
    return (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u');
}
int main() {
    char ch;
    printf("Enter a character: ");
    scanf(" %c", &ch);
    if (isVowel(ch)) {
        printf("%c is a vowel.\n", ch);
    } else
{
        printf("%c is a consonant.\n", ch);
    }
    return 0;
}

Calculate lcm and gcd-23
#include <stdio.h>
int findGCD(int a, int b) {
    while (a != b) {
        if (a > b) {
            a -= b;
        } else {
            b -= a;
        }
    }
    return a;
}
int findLCM(int a, int b) {
    return (a * b) / findGCD(a, b);
}
int main() {
    int num1, num2;
    printf("Enter two numbers: ");
    scanf("%d %d", &num1, &num2);
    printf("GCD of %d and %d is %d\n", num1, num2, findGCD(num1, num2));
    printf("LCM of %d and %d is %d\n", num1, num2, findLCM(num1, num2));
    return 0;
}


Calculate compound interest-24
#include <stdio.h>
#include <math.h>
int main() 
{
    float principal, rate, time, compoundInterest;
    printf("Enter the principal amount: ");
    scanf("%f", &principal);
    printf("Enter the rate of interest: ");
    scanf("%f", &rate);
    printf("Enter the time in years: ");
    scanf("%f", &time);
    compoundInterest = principal * pow((1 + rate / 100), time) - principal;
    printf("Compound Interest: %f\n", compoundInterest);
    return 0;
}

Perfect number-25
#include <stdio.h>
int isPerfect(int num) 
{
    int sum = 1; 
    for (int i = 2; i * i <= num; i++) {
        if (num % i == 0) {
            sum += i;
            if (i != num / i) {
                sum += num / i;
            }
        }
    }
    return (sum == num);
}
int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    if (isPerfect(num)) {
        printf("%d is a perfect number.\n", num);
    } 
else
{
        printf("%d is not a perfect number.\n", num);
    }
    return 0;
}

Matrix addition-26
#include <stdio.h>

void matrixAddition(int rows, int cols, int mat1[10][10], int mat2[10][10], int result[10][10]) {
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            result[i][j] = mat1[i][j] + mat2[i][j];
        }
    }
}
int main() {
    int rows, cols;
    printf("Enter the number of rows and columns for matrices: ");
    scanf("%d %d", &rows, &cols);
    int mat1[10][10], mat2[10][10], result[10][10];
    printf("Enter elements of the first matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            scanf("%d", &mat1[i][j]);
        }
    }
    printf("Enter elements of the second matrix:\n");
   
Average of each row in matrix-27
#include <stdio.h>
void averageOfRows(int rows, int cols, int mat[10][10]) {
    for (int i = 0; i < rows; i++) {
        int sum = 0;
        for (int j = 0; j < cols; j++) {
            sum += mat[i][j];
        }
        printf("Average of elements in row %d: %.2f\n", i + 1, (float)sum / cols);
    }
}
int main() {
    int rows, cols;
    printf("Enter the number of rows and columns for the matrix: ");
    scanf("%d %d", &rows, &cols);
    int mat[10][10];
    printf("Enter elements of the matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            scanf("%d", &mat[i][j]);
        }
    }
    averageOfRows(rows, cols, mat);
    return 0;
}

Largest element in matrix-28
#include <stdio.h>
int findLargestElement(int rows, int cols, int mat[10][10]) {
    int max = mat[0][0];
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            if (mat[i][j] > max) {
                max = mat[i][j];
            }
        }
    }

    return max;
}
int main() {
    int rows, cols;
    printf("Enter the number of rows and columns for the matrix: ");
    scanf("%d %d", &rows, &cols);
    int mat[10][10];
    printf("Enter elements of the matrix:\n");
    for (int i = 0; i < rows; i++) {
        for (int j = 0; j < cols; j++) {
            scanf("%d", &mat[i][j]);
        }
    }
    int largestElement = findLargestElement(rows, cols, mat);
    printf("Largest element in the matrix: %d\n", largestElement);
    return 0;
}

Matrix multiplication-29
#include <stdio.h>

void matrixMultiplication(int rows1, int cols1, int mat1[10][10], int rows2, int cols2, int mat2[10][10], int result[10][10]) {
    if (cols1 != rows2) {
        printf("Matrix multiplication is not possible.\n");
        return;
    }

    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols2; j++) {
            result[i][j] = 0;

            for (int k = 0; k < cols1; k++) {
                result[i][j] += mat1[i][k] * mat2[k][j];
            }
        }
    }
}

int main() 
{
    int rows1, cols1, rows2, cols2;
    printf("Enter the number of rows and columns for the first matrix: ");
    scanf("%d %d", &rows1, &cols1);
    printf("Enter the number of rows and columns for the second matrix: ");
    scanf("%d %d", &rows2, &cols2);
    int mat1[10][10], mat2[10][10], result[10][10];
    printf("Enter elements of the first matrix:\n");
    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols1; j++) {
            scanf("%d", &mat1[i][j]);
        }
    }
    printf("Enter elements of the second matrix:\n");
    for (int i = 0; i < rows2; i++) {
        for (int j = 0; j < cols2; j++) {
            scanf("%d", &mat2[i][j]);
        }
    }
    matrixMultiplication(rows1, cols1, mat1, rows2, cols2, mat2, result);
    printf("Resultant matrix after multiplication:\n");
    for (int i = 0; i < rows1; i++) {
        for (int j = 0; j < cols2; j++) {
            printf("%d ", result[i][j]);
        }
        printf("\n");
    }
    return 0;
}

Simple calculator-30
#include <stdio.h>
int main() 
{
    char operator;
    double num1, num2, result;
    printf("Enter first number: ");
    scanf("%lf", &num1);
    printf("Enter operator (+, -, *, /): ");
    scanf(" %c", &operator);
    printf("Enter second number: ");
    scanf("%lf", &num2);
    switch (operator) {
        case '+':
            result = num1 + num2;
            break;
        case '-':
            result = num1 - num2;
            break;
        case '*':
            result = num1 * num2;
            break;
        case '/':
            if (num2 != 0) {
                result = num1 / num2;
            } else {
                printf("Error: Division by zero is not allowed.\n");
                return 1;  // Exit with an error code
            }
            break;
        default:
            printf("Error: Invalid operator.\n");
            return 1;  // Exit with an error code
    }
    printf("Result: %f\n", result);
    return 0;  
}

















